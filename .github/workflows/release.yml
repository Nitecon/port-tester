name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install -r requirements.txt pyinstaller

      - name: Build binary
        shell: bash
        run: |
          # Use windowed app on macOS/Windows to avoid console window
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            pyinstaller --name port-tester --onefile --windowed app.py
            echo "BIN=dist/port-tester.app" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            pyinstaller --name port-tester --onefile --windowed app.py
            echo "BIN=dist/port-tester.exe" >> $GITHUB_ENV
          else
            pyinstaller --name port-tester --onefile app.py
            echo "BIN=dist/port-tester" >> $GITHUB_ENV
          fi

      - name: Package artifact (macOS)
        if: runner.os == 'macOS'
        shell: bash
        run: |
          ARCHIVE="dist/port-tester-macOS.zip"
          (cd dist && zip -r port-tester-macOS.zip port-tester.app)
          echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV

      - name: Package artifact (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          ARCHIVE="dist/port-tester-Linux.tar.gz"
          tar -czf "$ARCHIVE" -C dist port-tester
          echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV

      - name: Package artifact (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $archive = "dist/port-tester-Windows.zip"
          Compress-Archive -Path dist/port-tester.exe -DestinationPath $archive -Force
          echo "ARCHIVE=$archive" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: port-tester-${{ runner.os }}
          path: ${{ env.ARCHIVE }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/port-tester-Linux/*.tar.gz
            artifacts/port-tester-macOS/*.zip
            artifacts/port-tester-Windows/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
